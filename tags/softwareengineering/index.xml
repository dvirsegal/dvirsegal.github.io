<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>softwareengineering on dvirsegal</title>
    <link>http://dvirsegal.github.io/tags/softwareengineering/</link>
    <description>Recent content in softwareengineering on dvirsegal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 11 Aug 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://dvirsegal.github.io/tags/softwareengineering/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Everybody was cargo culting</title>
      <link>http://dvirsegal.github.io/posts/everybody-was-cargo-culting-46n5/</link>
      <pubDate>Tue, 11 Aug 2020 00:00:00 +0000</pubDate>
      <guid>http://dvirsegal.github.io/posts/everybody-was-cargo-culting-46n5/</guid>
      <description>My personal experience to jump off the bandwagon (effect)&#xD;Link to heading&#xD;Imagine the following situation. One of your experienced colleagues talks about doing some work, which she’s passionate about and sure it will provide better results for the team. She has fire in her eyes when she talks about replacing technology X with Y.&#xA;You feel it right into your heart. Your colleagues seem to agree with her. She’s so right.</description>
    </item>
    <item>
      <title>Diving into the deep code waters</title>
      <link>http://dvirsegal.github.io/posts/diving-into-the-deep-code-waters-57p9/</link>
      <pubDate>Wed, 24 Jun 2020 00:00:00 +0000</pubDate>
      <guid>http://dvirsegal.github.io/posts/diving-into-the-deep-code-waters-57p9/</guid>
      <description>Tools and techniques for exploring an unknown (large) codebase&#xD;Link to heading&#xD;You’ve received a new responsibility or walked into a new job where there is existing code to work with. The source control has been introduced to you, realizing you have a lot to learn. Now what? Asking yourself, how should I become acquainted with the new codebase? Which for some, may be intimidating. Below I’ll attempt to illustrate my techniques for getting familiarity with the code, leading to structured knowledge.</description>
    </item>
    <item>
      <title>Code comments are your code autobiography</title>
      <link>http://dvirsegal.github.io/posts/code-comments-are-your-code-autobiography-3c7n/</link>
      <pubDate>Thu, 25 Jul 2019 00:00:00 +0000</pubDate>
      <guid>http://dvirsegal.github.io/posts/code-comments-are-your-code-autobiography-3c7n/</guid>
      <description>Writing about your code is redundant; the code is all you need. I can invest my time on unit tests or develop other features, and other excuses of why writing code comments is a waste of time. It’s a common belief among developers.&#xA;Well, you’ve invested all your efforts in cultivating the design of your code, why should you comment it, right? As a result, code documentation is either absent or useless.</description>
    </item>
  </channel>
</rss>
