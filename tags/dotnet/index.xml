<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dotnet on Dvir Segal&#39;s blog</title>
    <link>http://localhost:1313/tags/dotnet/</link>
    <description>Recent content in Dotnet on Dvir Segal&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 05 Feb 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/dotnet/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fusion Log Viewer: The binocular to assembly binding</title>
      <link>http://localhost:1313/posts/fusion-log-viewer-the-binocular-to-assembly-binding-4fe0/</link>
      <pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/fusion-log-viewer-the-binocular-to-assembly-binding-4fe0/</guid>
      <description>Investigating .NET assembly loading (binding) issues&#xD;Link to heading&#xD;Once in a while, you encounter that peculiar problem when you run your application and receive an exception saying TypeLoadException or FileNotFoundException even though the DLLs that your application relies on, are right there!&#xA;The first suspect that may jump to your head is an assembly binding issue since it happens at the moment you run your application. It might be a mix of old DLLs with new ones, mismatch in version numbers or cultures, missing assemblies at the application’s folder, or even a probing failure, either of each — fusion log viewer can assist in identifying the case.</description>
    </item>
    <item>
      <title>When in Doubt, Reverse Engineer It</title>
      <link>http://localhost:1313/posts/when-in-doubt-reverse-engineer-it-1jdk/</link>
      <pubDate>Thu, 02 May 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/when-in-doubt-reverse-engineer-it-1jdk/</guid>
      <description>Occasionally you’ll get into a situation where a problem happened in your application, and you don’t have access to your source code and\or symbols.&#xA;At that moment, one of your better options is to decompile your code and debug it. IMHO, one of the best free tools out there is dnSpy, developed by 0xd4d (respect).&#xA;According to him, dnSpy is an improved ILSpy decompiler that enhanced by Roslyn (C# / Visual Basic) compiler and many other open source libraries.</description>
    </item>
  </channel>
</rss>
