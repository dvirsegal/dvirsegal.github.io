<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bestpractices on Dvir Segal&#39;s blog</title>
    <link>http://localhost:1313/tags/bestpractices/</link>
    <description>Recent content in Bestpractices on Dvir Segal&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 24 Jun 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/bestpractices/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Diving into the deep code waters</title>
      <link>http://localhost:1313/posts/diving-into-the-deep-code-waters-57p9/</link>
      <pubDate>Wed, 24 Jun 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/diving-into-the-deep-code-waters-57p9/</guid>
      <description>Tools and techniques for exploring an unknown (large) codebase&#xD;Link to heading&#xD;You’ve received a new responsibility or walked into a new job where there is existing code to work with. The source control has been introduced to you, realizing you have a lot to learn. Now what? Asking yourself, how should I become acquainted with the new codebase? Which for some, may be intimidating. Below I’ll attempt to illustrate my techniques for getting familiarity with the code, leading to structured knowledge.</description>
    </item>
  </channel>
</rss>
